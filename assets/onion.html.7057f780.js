import{_ as n,o as s,c as a,e as p}from"./app.6da7124e.js";const t={},e=p(`<h1 id="koa-\u6D0B\u8471\u6A21\u578B" tabindex="-1"><a class="header-anchor" href="#koa-\u6D0B\u8471\u6A21\u578B" aria-hidden="true">#</a> Koa \u6D0B\u8471\u6A21\u578B</h1><p>\u524D\u8A00\uFF1AKoa \u662F\u4E00\u4E2A\u65B0\u7684 web \u6846\u67B6\uFF0C\u7531 Express \u5E55\u540E\u7684\u539F\u73ED\u4EBA\u9A6C\u6253\u9020\uFF0C \u81F4\u529B\u4E8E\u6210\u4E3A web \u5E94\u7528\u548C API \u5F00\u53D1\u9886\u57DF\u4E2D\u7684\u4E00\u4E2A\u66F4\u5C0F\u3001\u66F4\u5BCC\u6709\u8868\u73B0\u529B\u3001\u66F4\u5065\u58EE\u7684\u57FA\u77F3\u3002 \u901A\u8FC7\u5229\u7528 async \u51FD\u6570\uFF0CKoa \u5E2E\u4F60\u4E22\u5F03\u56DE\u8C03\u51FD\u6570\uFF0C\u5E76\u6709\u529B\u5730\u589E\u5F3A\u9519\u8BEF\u5904\u7406\u3002 Koa \u5E76\u6CA1\u6709\u6346\u7ED1\u4EFB\u4F55\u4E2D\u95F4\u4EF6\uFF0C \u800C\u662F\u63D0\u4F9B\u4E86\u4E00\u5957\u4F18\u96C5\u7684\u65B9\u6CD5\uFF0C\u5E2E\u52A9\u60A8\u5FEB\u901F\u800C\u6109\u5FEB\u5730\u7F16\u5199\u670D\u52A1\u7AEF\u5E94\u7528\u7A0B\u5E8F\u3002</p><h2 id="\u4EC0\u4E48\u662F\u6D0B\u8471\u6A21\u578B" tabindex="-1"><a class="header-anchor" href="#\u4EC0\u4E48\u662F\u6D0B\u8471\u6A21\u578B" aria-hidden="true">#</a> \u4EC0\u4E48\u662F\u6D0B\u8471\u6A21\u578B\uFF1F</h2><p>\u6211\u4EEC\u5148\u6765\u770B\u4E00\u4E2A demo\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> Koa <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Koa</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u5E94\u7528\u7A0B\u5E8F</span>

<span class="token comment">// \u4E2D\u95F4\u4EF61</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// \u4E2D\u95F4\u4EF62</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
  <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">9000</span><span class="token punctuation">,</span> <span class="token string">&#39;0.0.0.0&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Server is starting</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6D4F\u89C8\u5668\u8F93\u5165 localhost:9000\uFF0C\u63A7\u5236\u53F0\u4F1A\u6709\u5982\u4E0B\u6253\u5370\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>1
3
4
2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F88\u660E\u663E\uFF0C\u5728 koa \u7684\u4E2D\u95F4\u4EF6\u4E2D\uFF0C\u901A\u8FC7 next \u51FD\u6570\uFF0C\u5C06\u4E2D\u95F4\u4EF6\u5206\u6210\u4E86\u4E24\u90E8\u5206\uFF0Cnext \u4E0A\u9762\u7684\u4E00\u90E8\u5206\u4F1A\u9996\u5148\u6267\u884C\uFF0C\u800C\u4E0B\u9762\u7684\u4E00\u90E8\u5206\u5219\u4F1A\u5728\u6240\u6709\u540E\u7EED\u7684\u4E2D\u95F4\u4EF6\u8C03\u7528\u4E4B\u540E\u6267\u884C\u3002</p><p>Koa \u4E2D\u95F4\u4EF6\u6267\u884C\u987A\u5E8F\uFF1A</p><ul><li><p>\u5916\u5C42\u4E2D\u95F4\u4EF6\u8FDB\u884C\u524D\u671F\u5904\u7406\uFF08next \u524D\u7684\u903B\u8F91\uFF09\uFF1B</p></li><li><p>\u8C03\u7528 next\uFF0C\u5C06\u63A7\u5236\u6D41\u4EA4\u7ED9\u4E0B\u4E2A\u4E2D\u95F4\u4EF6\uFF0C\u5E76 await \u5176\u5B8C\u6210\uFF0C\u76F4\u5230\u540E\u9762\u6CA1\u6709\u4E2D\u95F4\u4EF6\u6216\u8005\u6CA1\u6709 next \u51FD\u6570\u6267\u884C\u4E3A\u6B62\uFF1B</p></li><li><p>\u5B8C\u6210\u540E\uFF0C\u4E00\u5C42\u5C42\u56DE\u6EAF\u6267\u884C\u5404\u4E2A\u4E2D\u95F4\u4EF6\u7684\u540E\u671F\u5904\u7406\uFF08next \u540E\u7684\u903B\u8F91\uFF09\u3002</p></li></ul><h2 id="\u81EA\u5B9A\u4E49\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u81EA\u5B9A\u4E49\u5B9E\u73B0" aria-hidden="true">#</a> \u81EA\u5B9A\u4E49\u5B9E\u73B0</h2><p>\u4ECE\u672C\u8D28\u4E0A\u6765\u8BF4\uFF0C\u6D0B\u8471\u6A21\u578B\u5B9E\u9645\u4E0A\u5C31\u662F\u4E00\u4E2A\u5B9E\u73B0\u4EE5\u4E0B\u6548\u679C\u7684\u51FD\u6570\u8C03\u7528\u65B9\u6CD5\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> <span class="token function">f2</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">f2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> <span class="token function">f3</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">f3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>1
3
5
6
4
2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u4F60\u4F1A\u53D1\u73B0\u5B9E\u9645\u6548\u679C\u662F\u5B9E\u73B0\u7C7B\u4F3C\u8FD9\u6837\u7684\u7ED3\u6784\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4ECE\u7B2C\u4E00\u4E2A\u7236\u51FD\u6570\u5F00\u59CB\uFF0C\u5F80\u91CC\u9762\u585E\u5B50\u51FD\u6570\uFF0C\u5B50\u51FD\u6570\u585E\u5B59\u51FD\u6570\u3002\u8FD9\u4E2A\u65F6\u5019\u8C03\u7528\u7236\u51FD\u6570\uFF0C\u5C31\u4F1A\u4F9D\u6B21\u5F80\u91CC\u8D70\uFF0C\u5148\u6267\u884C\u540C\u6B65\u4EE3\u7801\uFF0C\u9047\u5230\u5F02\u6B65\u4EE3\u7801\u653E\u5230\u961F\u5217\u4E2D\uFF0C\u540C\u6B65\u4EE3\u7801\u6267\u884C\u5B8C\u6BD5\u518D\u4F9D\u6B21\u53D6\u51FA\u961F\u5217\u4E2D\u7684\u4EE3\u7801\u6267\u884C\uFF0C\u672C\u8D28\u4E0A\u662F\u5229\u7528\u4E86 js \u7684\u4E8B\u4EF6\u5FAA\u73AF\u673A\u5236\u3002</p><p>\u4E0B\u9762\u6211\u4EEC\u6765\u770B\u4E0B\u7B80\u7248\u7684\u5B9E\u73B0\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> middleware <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">let</span> <span class="token function-variable function">f1</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token keyword">await</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> <span class="token function-variable function">f2</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
  <span class="token keyword">await</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> <span class="token function-variable function">f3</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">use</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  middleware<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">use</span><span class="token punctuation">(</span>f1<span class="token punctuation">)</span>
<span class="token function">use</span><span class="token punctuation">(</span>f2<span class="token punctuation">)</span>
<span class="token function">use</span><span class="token punctuation">(</span>f3<span class="token punctuation">)</span>

<span class="token comment">// \u6838\u5FC3\u4EE3\u7801</span>
<span class="token keyword">function</span> <span class="token function">compose</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
  <span class="token keyword">function</span> <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token parameter">i</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> fn <span class="token operator">=</span> middleware<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>fn<span class="token punctuation">)</span> <span class="token keyword">return</span>
    <span class="token keyword">return</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token function">dispatch</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token function">compose</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4ECE\u7B2C\u4E00\u4E2A\u51FD\u6570\u5F00\u59CB\uFF0C\u4F9D\u6B21\u628A\u4E0B\u4E00\u4E2A\u51FD\u6570\u5F53\u505A\u53C2\u6570\u585E\u8FDB\u53BB\u3002</p><h2 id="koa-compose-\u6E90\u7801" tabindex="-1"><a class="header-anchor" href="#koa-compose-\u6E90\u7801" aria-hidden="true">#</a> koa-compose \u6E90\u7801</h2><p>\u4EE5\u4E0B\u662F Koa \u6D0B\u8471\u6A21\u578B\u7684\u6E90\u7801\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">compose</span><span class="token punctuation">(</span><span class="token parameter">middleware</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>middleware<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&#39;Middleware stack must be an array!&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> fn <span class="token keyword">of</span> middleware<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> fn <span class="token operator">!==</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&#39;Middleware must be composed of functions!&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token comment">//  \u4F20\u5165\u5BF9\u8C61 context \u8FD4\u56DEPromise</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">context<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// last called middleware #</span>
    <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span>
    <span class="token keyword">return</span> <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token keyword">function</span> <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token parameter">i</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> index<span class="token punctuation">)</span>
        <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;next() called multiple times&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      index <span class="token operator">=</span> i
      <span class="token keyword">let</span> fn <span class="token operator">=</span> middleware<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> middleware<span class="token punctuation">.</span>length<span class="token punctuation">)</span> fn <span class="token operator">=</span> next
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>fn<span class="token punctuation">)</span> <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token function">fn</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token function">dispatch</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EE3\u7801\u6700\u6838\u5FC3\u7684\u4E24\u70B9\uFF1A</p><ol><li><p>\u5C06 <code>context</code> \u4E00\u8DEF\u4F20\u4E0B\u53BB\u7ED9\u4E2D\u95F4\u4EF6</p></li><li><p>\u5C06 <code>middleware</code> \u4E2D\u7684\u4E0B\u4E00\u4E2A\u4E2D\u95F4\u4EF6 <code>fn</code> \u4F5C\u4E3A\u672A\u6765 <code>next</code> \u7684\u8FD4\u56DE\u503C</p></li></ol><h2 id="\u53E6\u4E00\u79CD\u5B9E\u73B0\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u53E6\u4E00\u79CD\u5B9E\u73B0\u65B9\u6CD5" aria-hidden="true">#</a> \u53E6\u4E00\u79CD\u5B9E\u73B0\u65B9\u6CD5</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">compose</span><span class="token punctuation">(</span><span class="token parameter">middlewares</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">function</span> <span class="token function">createNext</span><span class="token punctuation">(</span><span class="token parameter">middleware<span class="token punctuation">,</span> oldNext</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">await</span> <span class="token function">middleware</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> oldNext<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> len <span class="token operator">=</span> middlewares<span class="token punctuation">.</span>length
    <span class="token keyword">let</span> <span class="token function-variable function">next</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> len <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> currentMiddleware <span class="token operator">=</span> middlewares<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
      next <span class="token operator">=</span> <span class="token function">createNext</span><span class="token punctuation">(</span>currentMiddleware<span class="token punctuation">,</span> next<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">await</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5C06\u4E2D\u95F4\u4EF6\u4ECE\u6700\u540E\u4E00\u4E2A\u5F00\u59CB\u5C01\u88C5\uFF0C\u6BCF\u4E00\u6B21\u90FD\u662F\u5C06\u81EA\u5DF1\u7684\u6267\u884C\u51FD\u6570\u5C01\u88C5\u6210 next \u5F53\u505A\u4E0A\u4E00\u4E2A\u4E2D\u95F4\u4EF6\u7684 next \u53C2\u6570\uFF0C\u8FD9\u6837\u5F53\u5FAA\u73AF\u5230\u7B2C\u4E00\u4E2A\u4E2D\u95F4\u4EF6\u7684\u65F6\u5019\uFF0C\u53EA\u9700\u8981\u6267\u884C\u4E00\u6B21 next()\uFF0C\u5C31\u80FD\u94FE\u5F0F\u7684\u9012\u5F52\u8C03\u7528\u6240\u6709\u4E2D\u95F4\u4EF6\u3002</p>`,29),o=[e];function c(l,i){return s(),a("div",null,o)}var k=n(t,[["render",c],["__file","onion.html.vue"]]);export{k as default};
